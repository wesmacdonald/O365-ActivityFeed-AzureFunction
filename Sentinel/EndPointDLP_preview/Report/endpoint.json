{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "36a4172e-0e49-4884-b2a2-2281528a2ff4",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 7776000000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            }
          },
          {
            "id": "4e1b6539-9788-43e2-a283-4891f33f1677",
            "version": "KqlParameterItem/1.0",
            "name": "Operations",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "endpointdlp_CL | mv-apply SensitiveInfoTypeId = todynamic(SensitiveInfoTypeData_s) on (where SensitiveInfoTypeData_s != \"\" )\r\n| extend SensitiveInfoTypeIdnew = tostring(parse_json(SensitiveInfoTypeId).SensitiveInfoTypeId)\r\n| join kind = inner \r\n ( \r\n DLPSensitivity_CL \r\n | extend SensitiveInfoTypeIdnew = tostring(Id_g)\r\n | summarize arg_max(TimeGenerated, *) by SensitiveInfoTypeIdnew \r\n )\r\n on SensitiveInfoTypeIdnew\r\n| summarize Count = count() by Operation_s\r\n| order by Count desc, Operation_s asc\r\n| project Value = Operation_s, Label = strcat(Operation_s, ' - ', Count)",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "All"
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "e2b700d7-d218-47db-9521-52176ed43005",
            "version": "KqlParameterItem/1.0",
            "name": "Users",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "endpointdlp_CL\r\n| where UserId_s != \"\"\r\n| summarize Count = count() by UserId_s\r\n| order by Count desc, UserId_s asc\r\n| project Value = UserId_s, Label = strcat(UserId_s, ' - ', Count)",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "All"
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "fee19597-ebc1-4f26-bc82-1284e9111625",
            "version": "KqlParameterItem/1.0",
            "name": "ContentType",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "endpointdlp_CL\r\n| mv-apply SensitiveInfoTypeId = todynamic(SensitiveInfoTypeData_s) on (where SensitiveInfoTypeData_s != \"\" )\r\n| extend SensitiveInfoTypeIdnew = tostring(parse_json(SensitiveInfoTypeId).SensitiveInfoTypeId)\r\n| join kind = inner \r\n ( \r\n DLPSensitivity_CL \r\n | extend SensitiveInfoTypeIdnew = tostring(Id_g)\r\n | summarize arg_max(TimeGenerated, *) by SensitiveInfoTypeIdnew \r\n )\r\n on SensitiveInfoTypeIdnew\r\n\r\n| where Name_s != \"\"\r\n| summarize Count = count() by Name_s\r\n| order by Count desc, Name_s asc\r\n| project Value = Name_s, Label = strcat(Name_s, ' - ', Count)\r\n",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "All"
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "58174fbf-4fda-45e5-a669-d60c8486496a",
            "version": "KqlParameterItem/1.0",
            "name": "Document",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "endpointdlp_CL\r\n| mv-apply SensitiveInfoTypeId = todynamic(SensitiveInfoTypeData_s) on (where SensitiveInfoTypeData_s != \"\" )\r\n| extend SensitiveInfoTypeIdnew = tostring(parse_json(SensitiveInfoTypeId).SensitiveInfoTypeId)\r\n| join kind = inner \r\n ( \r\n DLPSensitivity_CL \r\n | extend SensitiveInfoTypeIdnew = tostring(Id_g)\r\n | summarize arg_max(TimeGenerated, *) by SensitiveInfoTypeIdnew \r\n )\r\n on SensitiveInfoTypeIdnew\r\n\r\n| where DocumentName_s != \"\"\r\n| summarize Count = count() by DocumentName_s\r\n| order by Count desc, DocumentName_s asc\r\n| project Value = DocumentName_s, Label = strcat(DocumentName_s, ' - ', Count)\r\n",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "All"
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "parameters - 1"
    },
    {
      "type": 1,
      "content": {
        "json": "## **General EndPoint DLP Overview**"
      },
      "name": "text - 0"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data = endpointdlp_CL\r\n| mv-apply SensitiveInfoTypeId = todynamic(SensitiveInfoTypeData_s) on (where SensitiveInfoTypeData_s != \"\" )\r\n| extend SensitiveInfoTypeIdnew = tostring(parse_json(SensitiveInfoTypeId).SensitiveInfoTypeId)\r\n| join kind = inner \r\n ( \r\n DLPSensitivity_CL \r\n | extend SensitiveInfoTypeIdnew = tostring(Id_g)\r\n | summarize arg_max(TimeGenerated, *) by SensitiveInfoTypeIdnew \r\n )\r\n on SensitiveInfoTypeIdnew\r\n| where \"{Users:lable}\"==\"All\" or UserKey_s in ({Users})\r\n| where \"{ContentType:label}\"==\"All\" or Name_s in ({ContentType});\r\ndata\r\n| summarize Count = count() by Operation_s\r\n| join kind = fullouter (datatable(Operation_s:string)['FileCopiedToNetworkShare', 'MicrosoftTeams']) on Operation_s\r\n| project Operation_s = iff(Operation_s == '', Operation_s1, Operation_s), Count = iff(Operation_s == '', 0, Count)\r\n| join kind = inner (data\r\n    | make-series Trend = count() default = 0 on CreationTime_t from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Operation_s)\r\n    on Operation_s\r\n| project-away Operation_s1, CreationTime_t\r\n| extend Operation_s = Operation_s\r\n| union (\r\n    data \r\n    | summarize Count = count() \r\n    | extend jkey = 1\r\n    | join kind=inner (data\r\n        | make-series Trend = count() default = 0 on CreationTime_t from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\r\n        | extend jkey = 1) on jkey\r\n    | extend Operation_s = 'All', Operation_ss = '*'    \r\n)\r\n| order by Count desc\r\n| take 10\r\n",
        "size": 4,
        "timeContext": {
          "durationMs": 7776000000
        },
        "timeContextFromParameter": "TimeRange",
        "exportFieldName": "Workload_s",
        "exportParameterName": "SelectedWorkload",
        "exportDefaultValue": "All",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Operation_s",
            "formatter": 1,
            "formatOptions": {}
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "secondaryContent": {
            "columnMatch": "Trend",
            "formatter": 9,
            "formatOptions": {
              "min": 0,
              "palette": "coldHot"
            }
          },
          "showBorder": false
        }
      },
      "customWidth": "100",
      "name": "query - 10"
    },
    {
      "type": 1,
      "content": {
        "json": "## Sensitive Information Detection Overview"
      },
      "name": "text - 11"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data = endpointdlp_CL\r\n| mv-apply SensitiveInfoTypeId = todynamic(SensitiveInfoTypeData_s) on (where SensitiveInfoTypeData_s != \"\" )\r\n| extend SensitiveInfoTypeIdnew = tostring(parse_json(SensitiveInfoTypeId).SensitiveInfoTypeId)\r\n| join kind = inner \r\n ( \r\n DLPSensitivity_CL \r\n | extend SensitiveInfoTypeIdnew = tostring(Id_g)\r\n | summarize arg_max(TimeGenerated, *) by SensitiveInfoTypeIdnew \r\n )\r\n on SensitiveInfoTypeIdnew\r\n| extend ContentType = Name_s\r\n| extend UserId = UserKey_s\r\n| extend Operation = Operation_s\r\n| where ContentType != \"\"\r\n| where \"{ContentType:label}\"==\"All\" or ContentType in ({ContentType})\r\n| where \"{Users:lable}\"==\"All\" or UserId in ({Users})\r\n| where \"{Operations:lable}\"==\"All\" or Operation_s in ({Operations});\r\nlet appData = data\r\n| summarize TotalCount = count() by ContentType\r\n| join kind=inner (data\r\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by ContentType\r\n    | project-away TimeGenerated) on ContentType\r\n| order by TotalCount desc, ContentType asc\r\n| project ContentType, TotalCount, Trend\r\n| serialize Id = row_number();\r\ndata\r\n| summarize TotalCount = count() by UserId , ContentType\r\n| join kind=inner (data\r\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by ContentType, UserId\r\n    | project-away TimeGenerated) on ContentType, UserId\r\n| order by TotalCount desc, ContentType asc\r\n| project ContentType, UserId, TotalCount, Trend\r\n| serialize Id = row_number(1000000)\r\n| join kind=inner (appData) on ContentType\r\n| project Id, Name = UserId, Type = 'UserId', ['ContentType Count'] = TotalCount, Trend,  ParentId = Id1\r\n| union (appData \r\n    | project Id, Name = ContentType, Type = 'ContentType', ['ContentType Count'] = TotalCount,  Trend)\r\n| order by ['ContentType Count'] desc, Name asc",
        "size": 1,
        "showAnalytics": true,
        "title": "Sorted by Sensitive Information Type",
        "timeContext": {
          "durationMs": 7776000000
        },
        "timeContextFromParameter": "TimeRange",
        "exportParameterName": "OperationDetail",
        "exportDefaultValue": "{ \"Name\":\"\", \"Type\":\"*\"}",
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Id",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Operations Count",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "palette": "orange",
                "showIcon": true
              }
            },
            {
              "columnMatch": "Trend",
              "formatter": 9,
              "formatOptions": {
                "min": 0,
                "palette": "gray",
                "showIcon": true
              }
            },
            {
              "columnMatch": "ParentId",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "filter": true,
          "hierarchySettings": {
            "idColumn": "Id",
            "parentColumn": "ParentId",
            "treeType": 0,
            "expanderColumn": "Name"
          }
        }
      },
      "name": "query - 3"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let details = dynamic({OperationDetail});\r\nendpointdlp_CL\r\n| mv-apply SensitiveInfoTypeId = todynamic(SensitiveInfoTypeData_s) on (where SensitiveInfoTypeData_s != \"\" )\r\n| extend SensitiveInfoTypeIdnew = tostring(parse_json(SensitiveInfoTypeId).SensitiveInfoTypeId)\r\n| join kind = inner \r\n ( \r\n DLPSensitivity_CL \r\n | extend SensitiveInfoTypeIdnew = tostring(Id_g)\r\n | summarize arg_max(TimeGenerated, *) by SensitiveInfoTypeIdnew \r\n )\r\n on SensitiveInfoTypeIdnew\r\n| extend ContentType = Name_s\r\n| extend UserId = UserKey_s\r\n|extend creationTime = CreationTime_t \r\n| where \"{ContentType:lable}\"==\"All\" or ContentType in ({ContentType})\r\n| where \"{Users:lable}\"==\"All\" or UserId in ({Users})\r\n| where details.Type == '*' or (details.Type == 'ContentType' and ContentType == details.Name) or (details.Type == 'UserId' and UserId == details.Name)\r\n| summarize Amount = count() by ContentType, bin_at(creationTime, 1d, now()) \r\n| sort by Amount ",
        "size": 1,
        "showAnalytics": true,
        "title": "Policy Hits over time",
        "timeContext": {
          "durationMs": 7776000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "linechart"
      },
      "name": "query - 2"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let details = dynamic({OperationDetail});\r\nendpointdlp_CL\r\n| mv-apply SensitiveInfoTypeId = todynamic(SensitiveInfoTypeData_s) on (where SensitiveInfoTypeData_s != \"\" )\r\n| extend SensitiveInfoTypeIdnew = tostring(parse_json(SensitiveInfoTypeId).SensitiveInfoTypeId)\r\n| join kind = inner \r\n ( \r\n DLPSensitivity_CL \r\n | extend SensitiveInfoTypeIdnew = tostring(Id_g)\r\n | summarize arg_max(TimeGenerated, *) by SensitiveInfoTypeIdnew \r\n )\r\n on SensitiveInfoTypeIdnew\r\n| extend ContentType = Name_s\r\n| extend UserId = UserKey_s\r\n|extend creationTime = CreationTime_t \r\n| where \"{ContentType:lable}\"==\"All\" or ContentType in ({ContentType})\r\n| where \"{Users:lable}\"==\"All\" or UserId in ({Users})\r\n| where \"{Operations:lable}\"==\"All\" or Operation_s in ({Operations})\r\n| where details.Type == '*' or (details.Type == 'ContentType' and ContentType == details.Name) or (details.Type == 'UserId' and UserId == details.Name)\r\n| summarize Number = count() by ContentType, UserId, DocumentName_s, TimeGenerated",
        "size": 0,
        "showAnalytics": true,
        "title": "DLP Rules",
        "timeContext": {
          "durationMs": 7776000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "piechart"
      },
      "customWidth": "50",
      "name": "query - 4"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let details = dynamic({OperationDetail});\r\nendpointdlp_CL\r\n| mv-apply SensitiveInfoTypeId = todynamic(SensitiveInfoTypeData_s) on (where SensitiveInfoTypeData_s != \"\" )\r\n| extend SensitiveInfoTypeIdnew = tostring(parse_json(SensitiveInfoTypeId).SensitiveInfoTypeId)\r\n| join kind = inner \r\n ( \r\n DLPSensitivity_CL \r\n | extend SensitiveInfoTypeIdnew = tostring(Id_g)\r\n | summarize arg_max(TimeGenerated, *) by SensitiveInfoTypeIdnew \r\n )\r\n on SensitiveInfoTypeIdnew\r\n| extend ContentType = Name_s\r\n| extend UserId = UserKey_s\r\n|extend creationTime = CreationTime_t \r\n| where \"{ContentType:lable}\"==\"All\" or ContentType in ({ContentType})\r\n| where \"{Users:lable}\"==\"All\" or UserId in ({Users})\r\n| where \"{Operations:lable}\"==\"All\" or Operation_s in ({Operations})\r\n| where details.Type == '*' or (details.Type == 'ContentType' and ContentType == details.Name) or (details.Type == 'UserId' and UserId == details.Name)\r\n| summarize Number = count() by DocumentName_s, UserId, ContentType, bin(TimeGenerated, 1d)\r\n| order by Number, TimeGenerated",
        "size": 1,
        "title": "Document details",
        "timeContext": {
          "durationMs": 7776000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "filter": true,
          "sortBy": [
            {
              "itemKey": "TimeGenerated",
              "sortOrder": 2
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "TimeGenerated",
            "sortOrder": 2
          }
        ]
      },
      "customWidth": "50",
      "name": "query - 6"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data = endpointdlp_CL\r\n| mv-apply SensitiveInfoTypeId = todynamic(SensitiveInfoTypeData_s) on (where SensitiveInfoTypeData_s != \"\" )\r\n| extend SensitiveInfoTypeIdnew = tostring(parse_json(SensitiveInfoTypeId).SensitiveInfoTypeId)\r\n| join kind = inner \r\n ( \r\n DLPSensitivity_CL \r\n | extend SensitiveInfoTypeIdnew = tostring(Id_g)\r\n | summarize arg_max(TimeGenerated, *) by SensitiveInfoTypeIdnew \r\n )\r\n on SensitiveInfoTypeIdnew\r\n| extend UserId = UserKey_s\r\n| extend Operation = Operation_s\r\n| extend DocumentName = DocumentName_s\r\n| where Operation != \"\"\r\n| where \"{Operations:label}\"==\"All\" or Operation in ({Operations})\r\n| where \"{Users:lable}\"==\"All\" or UserId in ({Users});\r\nlet appData = data\r\n| summarize TotalCount = count() by Operation\r\n| join kind=inner (data\r\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Operation\r\n    | project-away TimeGenerated) on Operation\r\n| order by TotalCount desc, Operation asc\r\n| project Operation, TotalCount, Trend\r\n| serialize Id = row_number();\r\ndata\r\n| summarize TotalCount = count() by UserId , Operation, DocumentName\r\n| join kind=inner (data\r\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Operation, UserId, DocumentName\r\n    | project-away TimeGenerated) on Operation, UserId, DocumentName\r\n| order by TotalCount desc, Operation asc\r\n| project Operation, UserId, TotalCount, Trend, DocumentName\r\n| serialize Id = row_number(1000000)\r\n| join kind=inner (appData) on Operation\r\n| project Id, Name = UserId, Type = 'UserId', DocumentName, ['Operation Count'] = TotalCount, Trend,  ParentId = Id1\r\n| union (appData \r\n    | project Id, Name = Operation, Type = 'Operation', ['Operation Count'] = TotalCount,  Trend)\r\n| order by ['Operation Count'] desc, Name asc",
        "size": 1,
        "showAnalytics": true,
        "title": "Summary by Operation",
        "timeContext": {
          "durationMs": 7776000000
        },
        "timeContextFromParameter": "TimeRange",
        "exportParameterName": "OperationDetail",
        "exportDefaultValue": "{ \"Name\":\"\", \"Type\":\"*\"}",
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Id",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Operations Count",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "palette": "orange",
                "showIcon": true
              }
            },
            {
              "columnMatch": "Trend",
              "formatter": 9,
              "formatOptions": {
                "min": 0,
                "palette": "gray",
                "showIcon": true
              }
            },
            {
              "columnMatch": "ParentId",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "filter": true,
          "hierarchySettings": {
            "idColumn": "Id",
            "parentColumn": "ParentId",
            "treeType": 0,
            "expanderColumn": "Name"
          }
        }
      },
      "name": "query - 3 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let details = dynamic({OperationDetail});\r\nlet data = endpointdlp_CL\r\n| mv-apply SensitiveInfoTypeId = todynamic(SensitiveInfoTypeData_s) on (where SensitiveInfoTypeData_s != \"\" )\r\n| extend SensitiveInfoTypeIdnew = tostring(parse_json(SensitiveInfoTypeId).SensitiveInfoTypeId)\r\n| join kind = inner \r\n ( \r\n DLPSensitivity_CL \r\n | extend SensitiveInfoTypeIdnew = tostring(Id_g)\r\n | summarize arg_max(TimeGenerated, *) by SensitiveInfoTypeIdnew \r\n )\r\n on SensitiveInfoTypeIdnew\r\n| extend ContentType = Name_s\r\n| extend UserId = UserKey_s\r\n|extend creationTime = CreationTime_t \r\n| where \"{ContentType:lable}\"==\"All\" or ContentType in ({ContentType})\r\n| where \"{Users:lable}\"==\"All\" or UserId in ({Users})\r\n| where \"{Operations:lable}\"==\"All\" or Operation_s in ({Operations})\r\n| where details.Type == '*' or (details.Type == 'ContentType' and ContentType == details.Name) or (details.Type == 'UserId' and UserId == details.Name)\r\n| summarize Calls = count() by App = UserId , Request = DocumentName_s, Dependency = ContentType\r\n| extend RequestId = strcat(App, '::', Request);\r\nlet links = data\r\n| summarize Calls = sum(Calls) by App, RequestId\r\n| project SourceId = App, TargetId = RequestId, Calls, Kind = 'App -> Request'\r\n| union (data\r\n    | project SourceId = RequestId, TargetId = Dependency, Calls, Kind = 'Request -> Dependency');\r\nlet nodes = data\r\n| summarize Calls = sum(Calls) by App\r\n| project Id = App, Name = App, Calls, Kind = 'App'\r\n| union (data\r\n    | summarize Calls = sum(Calls) by RequestId, Request\r\n    | project Id = RequestId, Name = Request, Calls, Kind = 'Request')\r\n| union (data\r\n    | summarize Calls = sum(Calls) by Dependency\r\n    | project Id = Dependency, Name = Dependency, Calls, Kind = 'Dependency');\r\nnodes\r\n| union (links)",
        "size": 2,
        "title": "Centered on Sensitive Content Type",
        "timeContext": {
          "durationMs": 7776000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "graph",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "SourceFileName",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "GenericDetails",
                "linkIsContextBlade": true,
                "showIcon": true
              }
            },
            {
              "columnMatch": "DestinationFileName",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "DestinationFileExtension",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Number",
              "formatter": 8,
              "formatOptions": {
                "palette": "lightBlue",
                "showIcon": true
              }
            }
          ]
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "Name",
            "formatter": 12,
            "formatOptions": {
              "palette": "blue"
            }
          },
          "centerContent": {
            "columnMatch": "Calls",
            "formatter": 1,
            "formatOptions": {},
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "useGrouping": false,
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "nodeIdField": "Id",
          "sourceIdField": "SourceId",
          "targetIdField": "TargetId",
          "edgeSize": "Calls",
          "nodeSize": null,
          "staticNodeSize": 100,
          "colorSettings": {
            "nodeColorField": "Kind",
            "type": 1,
            "colorPalette": "cool"
          },
          "hivesMargin": 5
        },
        "mapSettings": {
          "locInfo": "AzureResource",
          "sizeSettings": "Number",
          "sizeAggregation": "Sum",
          "legendMetric": "Number",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "Number",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "name": "query - 9"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let details = dynamic({OperationDetail});\r\nlet data = endpointdlp_CL\r\n| mv-apply SensitiveInfoTypeId = todynamic(SensitiveInfoTypeData_s) on (where SensitiveInfoTypeData_s != \"\" )\r\n| extend SensitiveInfoTypeIdnew = tostring(parse_json(SensitiveInfoTypeId).SensitiveInfoTypeId)\r\n| join kind = inner \r\n ( \r\n DLPSensitivity_CL \r\n | extend SensitiveInfoTypeIdnew = tostring(Id_g)\r\n | summarize arg_max(TimeGenerated, *) by SensitiveInfoTypeIdnew \r\n )\r\n on SensitiveInfoTypeIdnew\r\n| extend ContentType = DocumentName_s\r\n| extend UserId = Application_s\r\n|extend creationTime = CreationTime_t \r\n| where \"{ContentType:lable}\"==\"All\" or ContentType in ({ContentType})\r\n| where \"{Users:lable}\"==\"All\" or UserKey_s in ({Users})\r\n| where \"{Operations:lable}\"==\"All\" or Operation_s in ({Operations})\r\n| where details.Type == '*' or (details.Type == 'ContentType' and ContentType == details.Name) or (details.Type == 'UserId' and UserId == details.Name)\r\n| summarize Calls = count() by App = UserId , Request = Operation_s, Dependency = ContentType\r\n| extend RequestId = strcat(App, '::', Request);\r\nlet links = data\r\n| summarize Calls = sum(Calls) by App, RequestId\r\n| project SourceId = App, TargetId = RequestId, Calls, Kind = 'App -> Request'\r\n| union (data\r\n    | project SourceId = RequestId, TargetId = Dependency, Calls, Kind = 'Request -> Dependency');\r\nlet nodes = data\r\n| summarize Calls = sum(Calls) by App\r\n| project Id = App, Name = App, Calls, Kind = 'App'\r\n| union (data\r\n    | summarize Calls = sum(Calls) by RequestId, Request\r\n    | project Id = RequestId, Name = Request, Calls, Kind = 'Request')\r\n| union (data\r\n    | summarize Calls = sum(Calls) by Dependency\r\n    | project Id = Dependency, Name = Dependency, Calls, Kind = 'Dependency');\r\nnodes\r\n| union (links)",
        "size": 2,
        "title": "Centered on Documents",
        "timeContext": {
          "durationMs": 7776000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "graph",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "SourceFileName",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "GenericDetails",
                "linkIsContextBlade": true,
                "showIcon": true
              }
            },
            {
              "columnMatch": "DestinationFileName",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "DestinationFileExtension",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Number",
              "formatter": 8,
              "formatOptions": {
                "palette": "lightBlue",
                "showIcon": true
              }
            }
          ]
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "Name",
            "formatter": 12,
            "formatOptions": {}
          },
          "centerContent": {
            "columnMatch": "Calls",
            "formatter": 1,
            "formatOptions": {},
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "useGrouping": false,
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "nodeIdField": "Id",
          "sourceIdField": "SourceId",
          "targetIdField": "TargetId",
          "edgeSize": "Calls",
          "nodeSize": null,
          "staticNodeSize": 100,
          "colorSettings": {
            "nodeColorField": "Kind",
            "type": 1,
            "colorPalette": "cool"
          },
          "hivesMargin": 5
        },
        "mapSettings": {
          "locInfo": "AzureResource",
          "sizeSettings": "Number",
          "sizeAggregation": "Sum",
          "legendMetric": "Number",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "Number",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "name": "query - 9 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let details = dynamic({OperationDetail});\r\nlet data = endpointdlp_CL\r\n| mv-apply SensitiveInfoTypeId = todynamic(SensitiveInfoTypeData_s) on (where SensitiveInfoTypeData_s != \"\" )\r\n| extend SensitiveInfoTypeIdnew = tostring(parse_json(SensitiveInfoTypeId).SensitiveInfoTypeId)\r\n| join kind = inner \r\n ( \r\n DLPSensitivity_CL \r\n | extend SensitiveInfoTypeIdnew = tostring(Id_g)\r\n | summarize arg_max(TimeGenerated, *) by SensitiveInfoTypeIdnew \r\n )\r\n on SensitiveInfoTypeIdnew\r\n| extend ContentType = DocumentName_s\r\n| extend UserId = Application_s\r\n|extend creationTime = CreationTime_t \r\n| where \"{Document:lable}\"==\"All\" or ContentType in ({Document})\r\n| where \"{Users:lable}\"==\"All\" or UserKey_s in ({Users})\r\n| where \"{Operations:lable}\"==\"All\" or Operation_s in ({Operations})\r\n| where details.Type == '*' or (details.Type == 'ContentType' and ContentType == details.Name) or (details.Type == 'UserId' and UserId == details.Name)\r\n| summarize Calls = count() by App = UserId , Request = Operation_s, Dependency = ContentType\r\n| extend RequestId = strcat(App, '::', Request);\r\nlet links = data\r\n| summarize Calls = sum(Calls) by App, RequestId\r\n| project SourceId = App, TargetId = RequestId, Calls, Kind = 'App -> Request'\r\n| union (data\r\n    | project SourceId = RequestId, TargetId = Dependency, Calls, Kind = 'Request -> Dependency');\r\nlet nodes = data\r\n| summarize Calls = sum(Calls) by App\r\n| project Id = App, Name = App, Calls, Kind = 'App'\r\n| union (data\r\n    | summarize Calls = sum(Calls) by RequestId, Request\r\n    | project Id = RequestId, Name = Request, Calls, Kind = 'Request')\r\n| union (data\r\n    | summarize Calls = sum(Calls) by Dependency\r\n    | project Id = Dependency, Name = Dependency, Calls, Kind = 'Dependency');\r\nnodes\r\n| union (links)",
        "size": 0,
        "title": "Centered on Documents",
        "timeContext": {
          "durationMs": 7776000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "graph",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "SourceFileName",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "GenericDetails",
                "linkIsContextBlade": true,
                "showIcon": true
              }
            },
            {
              "columnMatch": "DestinationFileName",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "DestinationFileExtension",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Number",
              "formatter": 8,
              "formatOptions": {
                "palette": "lightBlue",
                "showIcon": true
              }
            }
          ]
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "Name",
            "formatter": 12,
            "formatOptions": {}
          },
          "centerContent": {
            "columnMatch": "Calls",
            "formatter": 1,
            "formatOptions": {},
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "useGrouping": false,
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "nodeIdField": "Id",
          "sourceIdField": "SourceId",
          "targetIdField": "TargetId",
          "edgeSize": "Calls",
          "nodeSize": null,
          "staticNodeSize": 100,
          "colorSettings": {
            "nodeColorField": "Kind",
            "type": 1,
            "colorPalette": "cool"
          },
          "hivesMargin": 5
        },
        "mapSettings": {
          "locInfo": "AzureResource",
          "sizeSettings": "Number",
          "sizeAggregation": "Sum",
          "legendMetric": "Number",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "Number",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "name": "query - 9 - Copy - Copy"
    }
  ],
  "fallbackResourceIds": [
    "/subscriptions/50b33ed9-10e5-428c-aa07-e6567a968ff4/resourcegroups/mip/providers/microsoft.operationalinsights/workspaces/dlp-siem"
  ],
  "fromTemplateId": "sentinel-UserWorkbook",
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
